apply plugin: 'application'

repositories {
    mavenCentral()
}

dependencies {
   implementation group: 'org.json', name: 'json', version: '20200518'
}

//define main class
mainClassName = 'Concentration'

task runClient(type: JavaExec) {
  group 'client'
  description 'Creates client socket sends a message to the server'

  classpath = sourceSets.main.runtimeClasspath
  standardInput = System.in

  main = 'taskone.Client'
  standardInput = System.in

  // run with arguments e.g.: gradle runClient -Phost=localhost -Pport=8080 -q --console=plain
  def host = project.hasProperty("host") ? project.getProperty('host') : 'localhost'
  def port = project.hasProperty('port') ? project.getProperty('port') : '8080'

  args(host, port)
}

task runTask1(type: JavaExec) {
  group 'server'
  description 'Creates Server socket waits for messages'

  classpath = sourceSets.main.runtimeClasspath

  main = 'taskone.Server'
  standardInput = System.in
  
  // run with arguments e.g.: gradle runTask1 -Pport=8080 -q --console=plain
  def port = project.hasProperty('port') ? project.getProperty('port') : '8080'

  args(port)
}

task runTask2(type: JavaExec) {
  group 'server'
  description 'Creates a threaded server that can communicate with multiple clients'

  classpath = sourceSets.main.runtimeClasspath
  standardInput = System.in

  main = 'taskone.ThreadedServer'

  // run with arguments e.g.: gradle runTask2 -Pport=8080 -q --console=plain
  def port = project.hasProperty('port') ? project.getProperty('port') : '8080'

  args(port)
}

task runTask3(type: JavaExec) {
  group 'server'
  description 'Creates a threaded server that can communicate with a specified number ' +
          'of clients'

  classpath = sourceSets.main.runtimeClasspath
  standardInput = System.in

  main = 'taskone.ThreadPoolServer'

  // run with arguments e.g.: gradle runTask3 -Pport=8080 -Pusers -q --console=plain
  def port = project.hasProperty('port') ? project.getProperty('port') : '8080'
  def users = project.hasProperty('users') ? project.getProperty('users') : 2

  args(port, users)
}

